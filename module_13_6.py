# –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–ø–æ–ª–Ω–∏—Ç—å –∫–æ–¥ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∑–∞–¥–∞—á–∏, —á—Ç–æ–±—ã –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å' –ø—Ä–∏—Å—ã–ª–∞–ª–∞—Å—å Inline-–∫–ª–∞–≤–∏–∞—Ç—Ä—É–∞.
# –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É InlineKeyboardMarkup —Å 2 –∫–Ω–æ–ø–∫–∞–º–∏ InlineKeyboardButton:
#
#     –° —Ç–µ–∫—Å—Ç–æ–º '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω–æ—Ä–º—É –∫–∞–ª–æ—Ä–∏–π' –∏ callback_data='calories'
#     –° —Ç–µ–∫—Å—Ç–æ–º '–§–æ—Ä–º—É–ª—ã —Ä–∞—Å—á—ë—Ç–∞' –∏ callback_data='formulas'
#
# –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é main_menu(message), –∫–æ—Ç–æ—Ä–∞—è:
#
#     –ë—É–¥–µ—Ç –æ–±—ë—Ä–Ω—É—Ç–∞ –≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä message_handler, —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ —Ç–µ–∫—Å—Ç–∞ '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å'.
#     –°–∞–º–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ä–∞–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–µ Inline –º–µ–Ω—é –∏ —Ç–µ–∫—Å—Ç '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:'
#
# –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é get_formulas(call), –∫–æ—Ç–æ—Ä–∞—è:
#
#     –ë—É–¥–µ—Ç –æ–±—ë—Ä–Ω—É—Ç–∞ –≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä callback_query_handler, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ç–µ–∫—Å—Ç 'formulas'.
#     –ë—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º—É–ª–æ–π –ú–∏—Ñ—Ñ–ª–∏–Ω–∞-–°–∞–Ω –ñ–µ–æ—Ä–∞.
#
# –ò–∑–º–µ–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é set_age –∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –Ω–µ—ë:
#
#     –î–µ–∫–æ—Ä–∞—Ç–æ—Ä —Å–º–µ–Ω–∏—Ç–µ –Ω–∞ callback_query_handler, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ç–µ–∫—Å—Ç 'calories'.
#     –¢–µ–ø–µ—Ä—å —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–µ message, –∞ call. –î–æ—Å—Ç—É–ø –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –±—É–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∏–º - call.message.
#
# –ü–æ –∏—Ç–æ–≥—É –ø–æ–ª—É—á–∏—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º:
#
#     –í–≤–æ–¥–∏—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞ /start
#     –ù–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –ø—Ä–∏—Å—ã–ª–∞–µ—Ç—Å—è –æ–±—ã—á–Ω–æ–µ –º–µ–Ω—é: '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å' –∏ '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'.
#     –í –æ—Ç–≤–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å' –ø—Ä–∏—Å—ã–ª–∞–µ—Ç—Å—è Inline –º–µ–Ω—é: '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω–æ—Ä–º—É –∫–∞–ª–æ—Ä–∏–π' –∏ '–§–æ—Ä–º—É–ª—ã —Ä–∞—Å—á—ë—Ç–∞'
#     –ü–æ Inline –∫–Ω–æ–ø–∫–µ '–§–æ—Ä–º—É–ª—ã —Ä–∞—Å—á—ë—Ç–∞' –ø—Ä–∏—Å—ã–ª–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º—É–ª–æ–π.
#     –ü–æ Inline –∫–Ω–æ–ø–∫–µ '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω–æ—Ä–º—É –∫–∞–ª–æ—Ä–∏–π' –Ω–∞—á–∏–Ω–∞–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –º–∞—à–∏–Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ —Ü–µ–ø–æ—á–∫–µ.
import aiogram.utils.markdown
from aiogram import Bot, Dispatcher, executor, types
from aiogram.utils import markdown
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton

api = 'token'
bot = Bot(token=api)
dp = Dispatcher(bot=bot, storage=MemoryStorage())
start_flag = False

kb = ReplyKeyboardMarkup(resize_keyboard=True)
#button1 = KeyboardButton(text='1Ô∏è‚É£ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å')
button1 = KeyboardButton(text=' –†–∞—Å—Å—á–∏—Ç–∞—Ç—å')
button2 = KeyboardButton(text='üó∫Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
kb.add(button1)
kb.add(button2)


main_menu1 = InlineKeyboardMarkup()
button11 = InlineKeyboardButton(text='–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω–æ—Ä–º—É –∫–∞–ª–æ—Ä–∏–π', callback_data='calories')
button12 = InlineKeyboardButton(text='–§–æ—Ä–º—É–ª—ã —Ä–∞—Å—á—ë—Ç–∞', callback_data='formulas')
main_menu1.add(button11)
main_menu1.add(button12)


class UserState(StatesGroup):
    age = State()
    growth = State()
    weight = State()


@dp.message_handler(text='–†–∞—Å—Å—á–∏—Ç–∞—Ç—å')
async def main_menu(message: types.Message):
    global start_flag
    if not start_flag:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ.')
    else:
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:', reply_markup=main_menu1)



@dp.callback_query_handler(text='formulas')
async def get_formulas(call):
    await call.message.answer('–¥–ª—è –º—É–∂—á–∏–Ω: 10 —Ö –≤–µ—Å (–∫–≥) + 6,25 x —Ä–æ—Å—Ç (—Å–º) ‚Äì 5 —Ö –≤–æ–∑—Ä–∞—Å—Ç (–≥) + 5')
    await call.message.answer('–¥–ª—è –∂–µ–Ω—â–∏–Ω: 10 x –≤–µ—Å (–∫–≥) + 6,25 x —Ä–æ—Å—Ç (—Å–º) ‚Äì 5 x –≤–æ–∑—Ä–∞—Å—Ç (–≥) ‚Äì 161')
    await call.answer()


@dp.callback_query_handler(text='calories')
async def set_age(call):
    await call.message.answer('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç (–ª–µ—Ç):')
    await UserState.age.set()
    await call.answer()


@dp.message_handler(state=UserState.age)
async def set_growth(message, state):
    await state.update_data(age=message.text)

    await message.answer('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π —Ä–æ—Å—Ç –≤ —Å–º:')
    await UserState.growth.set()


@dp.message_handler(state=UserState.growth)
async def set_weight(message, state):
    await state.update_data(growth=message.text)

    await message.answer('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–µ—Å –≤ –∫–≥:')
    await UserState.weight.set()


@dp.message_handler(state=UserState.weight)
async def send_calories(message, state):
    await state.update_data(weight=message.text)

    data = await state.get_data()
    try:
        res = 10 * int(data['weight']) + 6.25 * int(data['growth']) - 5 * int(data['age'])
        await message.answer(f"–ö–∞–ª–æ—Ä–∏–∏ –¥–ª—è –∂–µ–Ω—â–∏–Ω {res - 161} –∫–∫–∞–ª")
        await message.answer(f"–ö–∞–ª–æ—Ä–∏–∏ –¥–ª—è –º—É–∂—á–∏–Ω {res + 5} –∫–∫–∞–ª")
    except:
        await message.answer(f"–í–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.")
    await state.finish()


@dp.message_handler(commands='start')
async def start_message(message: types.Message):
    global start_flag
    start_flag = True
    msg = '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –ø–æ–º–æ–≥–∞—é—â–∏–π —Ç–≤–æ–µ–º—É –∑–¥–æ—Ä–æ–≤—å—é. –ù–∞–∂–º–∏—Ç–µ –∫–Ωo–ø–∫—É –†–∞—Å—Å—á–∏—Ç–∞—Ç—å.'
    await message.answer(msg, reply_markup = kb)


@dp.message_handler(text = 'üó∫Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
async def send_information(message, state):
 await message.answer('–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç —Ä–∞—Å—á–µ—Ç —Å—É—Ç–æ—á–Ω–æ–π –Ω–æ—Ä–º—ã –∫–∞–ª–æ—Ä–∏–π –ø–æ —Ñ–æ—Ä–º—É–ª–µ –ú–∏—Ñ—Ñ–ª–∏–Ω–∞-–°–∞–Ω –ñ–µ–æ—Ä–∞ –¥–ª—è –º—É–∂—á–∏–Ω –∏ –∂–µ–Ω—â–∏–Ω.')
 await message.answer('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –†–∞—Å—Å—á–∏—Ç–∞—Ç—å')


@dp.message_handler()
async def all_messages(message: types.Message):
    global start_flag
    if not start_flag: await message.answer('–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ.')


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
